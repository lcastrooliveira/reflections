What happens when you initialize a repository? Why do you need to do it?

Git creates a hidden folder under the repository's root folder. It's needed
because it informs this folder is a reposisotory. It also starts tracking any
repository changes.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It's an intermediate place that it is used in order to build up logical commits.
It helps a better organization of commits by grouping all files in a logical meaning before
the commit is done.

How can you use the staging area to make sure you have one commit per logical change?

You can use the staging area to group the chages together across multiple files. Once
it has been done, then you can perform a logic change commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It helps by giving you a chance to test a new feature/technique you're not sure it will work/ or wanna test, but
you still want to keep the original version untouched.

How do the diagrams help you visualize the branch structure?

It helps by making easier to see the commits and its parents, also, helps to
better undertand possible unreachable commits

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The codes are combines. It is good to represent using diagrams because it's really easy
to see the commits that were combined when merging two branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: it makes easier to manage versions of files where thre is no logical conflict

Cons: A bug could be introduced, even if the buggy code is self contained and does not intereract
with your work.
